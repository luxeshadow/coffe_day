import { defineNuxtRouteMiddleware, navigateTo } from '#app'
import { useAuthStore } from '../stores/authStore'

export default defineNuxtRouteMiddleware((to) => {
  const authStore = useAuthStore()

  // âœ… Routes publiques accessibles sans connexion
  const publicRoutes = ['/', '/register']

  // âœ… On vÃ©rifie si la route actuelle correspond Ã  une route publique
  const isPublicRoute = publicRoutes.some(route => to.path.startsWith(route))

  // â›” Si pas connectÃ© et route privÃ©e â†’ redirige vers /
  if (!authStore.token && !isPublicRoute) {
    return navigateTo('/')
  }

  // âœ… Utilisateur connectÃ©
  if (authStore.token) {
    // ğŸš« EmpÃªcher accÃ¨s aux routes publiques pour les connectÃ©s
    if (isPublicRoute) {
      return navigateTo('/home')
    }

    // âœ… Redirection par rÃ´le
    if (authStore.role === 'admin' && !to.path.startsWith('/admin')) {
      return navigateTo('/admin/user/stat')
    }

    if (authStore.role !== 'admin' && to.path.startsWith('/admin')) {
      return navigateTo('/home')
    }
  }
})
